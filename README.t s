在 Linux 上设置 Chrome 的环境变量，以便 WebDriver（例如 ChromeDriver）能够找到 Chrome 浏览器，可以通过配置环境变量或脚本来实现。以下是几种设置 Chrome 环境变量的方法：

### 方法 1：临时设置环境变量

这种方法适用于在当前终端会话中设置环境变量。

1. 打开终端。
2. 使用 `export` 命令设置 `CHROME_BIN` 环境变量：

   ```sh
   export CHROME_BIN=/usr/bin/google-chrome
   ```

3. 运行 JMeter 或其他需要使用该环境变量的命令：

   ```sh
   jmeter -n -t /path/to/test_plan.jmx -l /path/to/result.jtl
   ```

### 方法 2：永久设置环境变量

这种方法适用于在所有终端会话中永久设置环境变量。

1. 打开终端。
2. 编辑 `~/.bashrc` 或 `~/.bash_profile` 文件（具体取决于您的 shell）：

   ```sh
   nano ~/.bashrc
   ```

3. 在文件末尾添加以下行：

   ```sh
   export CHROME_BIN=/usr/bin/google-chrome
   ```

4. 保存并关闭文件。
5. 使更改生效：

   ```sh
   source ~/.bashrc
   ```

### 方法 3：在脚本中设置环境变量

如果您希望在运行 JMeter 测试计划的脚本中设置环境变量，可以在脚本中添加 `export` 命令。

1. 创建一个脚本文件，例如 `run_jmeter.sh`：

   ```sh
   nano run_jmeter.sh
   ```

2. 添加以下内容：

   ```sh
   #!/bin/bash
   export CHROME_BIN=/usr/bin/google-chrome
   jmeter -n -t /path/to/test_plan.jmx -l /path/to/result.jtl
   ```

3. 保存并关闭文件。
4. 使脚本可执行：

   ```sh
   chmod +x run_jmeter.sh
   ```

5. 运行脚本：

   ```sh
   ./run_jmeter.sh
   ```

### 示例：在 JMeter WebDriver Sampler 中使用环境变量

在 WebDriver Sampler 中，可以直接使用 JavaScript 访问环境变量。例如：

```javascript
// 导入所需的 Selenium 库
var pkg = JavaImporter(org.openqa.selenium, org.openqa.selenium.chrome, org.openqa.selenium.By);

// 开始采样
WDS.sampleResult.sampleStart();

// 获取环境变量
var chromeBin = java.lang.System.getenv("CHROME_BIN");

// 设置 ChromeDriver 路径
java.lang.System.setProperty("webdriver.chrome.driver", "/usr/local/bin/chromedriver");

// 配置 Chrome 浏览器选项
var options = new pkg.ChromeOptions();
options.setBinary(chromeBin);  // 使用环境变量设置 Google Chrome 的路径
options.addArguments("--headless");  // 可选：启用无头模式

// 启动 ChromeDriver
WDS.browser = new pkg.ChromeDriver(options);

// 执行浏览器操作
WDS.browser.get('https://www.google.com');
var searchBox = WDS.browser.findElement(pkg.By.name('q'));
searchBox.sendKeys('JMeter Selenium');
searchBox.submit();

// 显式等待搜索结果加载
var wait = new pkg.WebDriverWait(WDS.browser, 10);
wait.until(pkg.ExpectedConditions.presenceOfElementLocated(pkg.By.id('search')));

// 设置全局字段
var fieldName = "searchQuery";
var fieldValue = "JMeter Selenium";
props.put(fieldName, fieldValue);

// 获取并打印全局字段
var retrievedValue = props.get(fieldName);
WDS.log.info("Retrieved global field value: " + retrievedValue);

WDS.sampleResult.sampleEnd();
```

通过这些方法，您可以设置和使用 Chrome 环境变量，使 WebDriver 能够找到并正确使用 Chrome 浏览器。
